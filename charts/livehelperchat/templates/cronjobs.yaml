{{- range $job := .Values.cronjobs }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $job.name }}"
  labels:
    {{- include "livehelperchat.labels" $ | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
            {{- with $.Values.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 15 }}
            {{- end }}
            containers:
              - command: [ {{ $job.command | quote }} ]
                {{- with $job.args }}
                args:
                {{- toYaml . | nindent 16 }}
                {{- end }}
                image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
                command: {{- toYaml $job.command | nindent 18 }}
                imagePullPolicy: IfNotPresent
                name: {{$job.name}}
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                resources:
                {{- toYaml $job.resources | nindent 18 }}
                env:
                  - name: DATABASE_HOST
                    value: {{$.Values.db.host }}
                  - name: DATABASE_PORT
                    value: {{$.Values.db.port | quote }}
                  - name: DATABASE_NAME
                    value: {{$.Values.db.name }}
                  - name: DATABASE_USER
                    value: {{$.Values.db.user }}
                  - name: DATABASE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: {{$.Values.db.secretName }}
                        key: PASSWORD
                  - name: ES_HOST
                    value: {{$.Values.elasticsearch.host }}
                  - name: REDIS_HOST
                    value: {{$.Values.redis.host }}
                  - name: SECRET_HASH
                    valueFrom:
                      secretKeyRef:
                        name: livechat
                        key: SECRET_HASH
                  - name: SESSION_SAVE_PATH
                    valueFrom:
                      secretKeyRef:
                        name: {{$.Values.redis.secretName }}
                        key: session.save_path

                  - name: REDIS_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: {{$.Values.redis.secretName }}
                        key: password
                
            dnsPolicy: ClusterFirst
            restartPolicy: {{ default "OnFailure" $job.restartPolicy }}
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
            
  schedule: {{ $job.schedule | quote }}
  suspend: {{ default false $job.suspend }}
---
{{- end -}}